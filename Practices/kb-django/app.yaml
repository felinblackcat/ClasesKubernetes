apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-media-data-local-pv
  namespace: ns-simpletyzer
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage2
  local:
    path: /home/felingato/clases/ClasesKubernetes/Practices/kb-django/app_data/media
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - timmygrande
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-static-data-local-pv
  namespace: ns-simpletyzer
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage2
  local:
    path: /home/felingato/clases/ClasesKubernetes/Practices/kb-django/app_data/static
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - timmygrande
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: app-media-data-local-pvc
  namespace: ns-simpletyzer
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage2
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: app-static-data-local-pvc
  namespace: ns-simpletyzer
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage2
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: ns-simpletyzer
data:
  SECRET_KEY: tachosama-insecure-fjahlfe=&tp4(p(l(yyp4udx*e7dtp@i-^$!7vq$3k8iwe!p5e
  DB_ENGINE: django.db.backends.postgresql_psycopg2
  DB_DEFAULT: tachoapp
  DB_USER: tacho
  DB_PASSWORD: 123tacho
  DB_HOST: teamtcj.com
  DB_PORT: '30007'
  LANGUAGE_CODE: es-co
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-app-config
  namespace: ns-simpletyzer
data:
  nginx.conf: |
    upstream hello_django {
      server 127.0.0.1:8000;
    }
    server {
        listen 80;
        location / {
          proxy_pass http://hello_django;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }
        location /static/ {
          autoindex off;
          alias /usr/share/nginx/html/static/;
        }
        location /media/ {
          autoindex off;
          alias /usr/share/nginx/html/media/;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tacho-app  # Sets Deployment name
  namespace: ns-simpletyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tacho-app
  template:
    metadata:
      labels:
        app: tacho-app
    spec:
      containers:
        - name: tacho-app
          image: felingato1992/kclases:tacho-test # Sets Image
          resources:
            limits:
              memory: "1Gi"
              cpu: "800m"
            requests:
              memory: "300Mi"
              cpu: "400m"
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8000  # Exposes container port
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          startupProbe:
            tcpSocket:
              port: 8000
            failureThreshold: 30
            periodSeconds: 1
          
          
          
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /usr/src/app/media
              name: media-files
            - mountPath: /usr/src/app/static
              name: static-files
        
        - name: tacho-app-nginx
          image: nginx:stable-alpine
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
            requests:
              memory: "200Mi"
              cpu: "400m"
          ports:
            - containerPort: 80
          # envFrom:
          #  - configMapRef:
          #      name: nginx-app-config
          volumeMounts:
            - mountPath: /usr/share/nginx/html/media/
              name: media-files
            - mountPath: /usr/share/nginx/html/static/
              name: static-files
              readOnly: true
            
            - mountPath: /etc/nginx/conf.d
              name: nginx-conf
              readOnly: true

              


      volumes:
        - name: media-files
          persistentVolumeClaim:
            claimName: app-media-data-local-pvc
        - name: static-files
          persistentVolumeClaim:
            claimName: app-static-data-local-pvc
        - name: nginx-conf
          configMap:
            name: nginx-app-config

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    app: app-service
  namespace: ns-simpletyzer
spec:
  selector:
    app: tacho-app
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30010
  type: NodePort
  